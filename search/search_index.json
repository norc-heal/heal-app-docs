{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HEAL Data Packaging Tool \u00b6 Purpose of the Tool \u00b6 Compiling and accurately documenting the aspects of your study's data and supporting documents in a way that will be understandable and usable for future researchers can be a difficult task. This tool was developed to help ease the burden of understanding and effectively fulfilling HEAL data sharing requirements. This tool provides you with easy to fill out forms and added guidance that will help you to document and annotate your study's experiments, results, and resources to maximize your study's findability and replicability by future researchers. When you fill out these forms, the tool will package up the information into different trackers, which you will then deposit into the repository you choose, along with your other data package components, as supporting documentation. The tool and the resulting trackers will provide systematic annotation of your data package, which will make your data package more understandable and usable for researchers interested in the data. For more information on the data packaging process, such as how to prepare your data and supporting documents before starting your package and how to determine your annotation approach, refer to [data packaging conceptual best practices]. The Trackers \u00b6 The tool builds three different trackers that provide a standardized way to supply supporting annotation in conjunction with shared data: experiment tracker, resource tracker, and results tracker. Information on the purpose and general content of each tracker is in the table below. Tracker Purpose Content Experiment tracker Provides contextual information on the experiments involved in the project Details each experiment, including research questions, approach, and hypotheses Resource tracker Provides inventory and annotated information for all data and supporting files List of data and non-data/supporting files, including description, path, and dependencies Results tracker Provides detailed information on all multi-result files List of each result, including type and description; there should be one results tracker per multi-result file","title":"About the HEAL Data Packaging Tool"},{"location":"#heal-data-packaging-tool","text":"","title":"HEAL Data Packaging Tool"},{"location":"#purpose-of-the-tool","text":"Compiling and accurately documenting the aspects of your study's data and supporting documents in a way that will be understandable and usable for future researchers can be a difficult task. This tool was developed to help ease the burden of understanding and effectively fulfilling HEAL data sharing requirements. This tool provides you with easy to fill out forms and added guidance that will help you to document and annotate your study's experiments, results, and resources to maximize your study's findability and replicability by future researchers. When you fill out these forms, the tool will package up the information into different trackers, which you will then deposit into the repository you choose, along with your other data package components, as supporting documentation. The tool and the resulting trackers will provide systematic annotation of your data package, which will make your data package more understandable and usable for researchers interested in the data. For more information on the data packaging process, such as how to prepare your data and supporting documents before starting your package and how to determine your annotation approach, refer to [data packaging conceptual best practices].","title":"Purpose of the Tool"},{"location":"#the-trackers","text":"The tool builds three different trackers that provide a standardized way to supply supporting annotation in conjunction with shared data: experiment tracker, resource tracker, and results tracker. Information on the purpose and general content of each tracker is in the table below. Tracker Purpose Content Experiment tracker Provides contextual information on the experiments involved in the project Details each experiment, including research questions, approach, and hypotheses Resource tracker Provides inventory and annotated information for all data and supporting files List of data and non-data/supporting files, including description, path, and dependencies Results tracker Provides detailed information on all multi-result files List of each result, including type and description; there should be one results tracker per multi-result file","title":"The Trackers"},{"location":"pkgdir/","text":"Creating a New Data Package \u00b6 The first step in creating your data package will be creating your Data Package directory. The Data Package directory is where you will save all of your data packaging documentation. The \"Data Package\" tab includes directions on how to create a Data Package directory. To create a Data Package directory: Click on the \"Data Package\" tab. Within the \"Create\" tab, select \"Create New Data Package\". Select the location where you want to save the Data Package directory in the File Explorer pop up window. Once you select a location, the folder \"dsc-pkg\" will appear within that folder. The tool will also display the new folder location in the user status message box: Your new dsc-pkg directory will contain an empty experiment tracker and resource tracker. The following steps will guide you through how to use the tool to fill out the experiment tracker, resource tracker, and results tracker (which will be created as you move through the process of entering results information).","title":"Creating a New Data Package"},{"location":"pkgdir/#creating-a-new-data-package","text":"The first step in creating your data package will be creating your Data Package directory. The Data Package directory is where you will save all of your data packaging documentation. The \"Data Package\" tab includes directions on how to create a Data Package directory. To create a Data Package directory: Click on the \"Data Package\" tab. Within the \"Create\" tab, select \"Create New Data Package\". Select the location where you want to save the Data Package directory in the File Explorer pop up window. Once you select a location, the folder \"dsc-pkg\" will appear within that folder. The tool will also display the new folder location in the user status message box: Your new dsc-pkg directory will contain an empty experiment tracker and resource tracker. The following steps will guide you through how to use the tool to fill out the experiment tracker, resource tracker, and results tracker (which will be created as you move through the process of entering results information).","title":"Creating a New Data Package"},{"location":"start/","text":"Downloading the Tool \u00b6 If you have a previous version saved in your File Explorer where you would like to save the new version of the tool, you will want to delete the old version or move it to an archive folder first. Navigate to the download link and download the tool. Unzip the files. You can unzip the files to your downloads folder or to another folder that you prefer, but you must unzip the files in order to be able to run and open the tool successfully. Once you have unzipped the files, open the newly created dsc-pkg-tool folder. Within this folder, there will be many files and folders, but you want to locate the \"dsc_pkg_tool\" executable file. Double click the file to open the tool.","title":"Downloading the Tool"},{"location":"start/#downloading-the-tool","text":"If you have a previous version saved in your File Explorer where you would like to save the new version of the tool, you will want to delete the old version or move it to an archive folder first. Navigate to the download link and download the tool. Unzip the files. You can unzip the files to your downloads folder or to another folder that you prefer, but you must unzip the files in order to be able to run and open the tool successfully. Once you have unzipped the files, open the newly created dsc-pkg-tool folder. Within this folder, there will be many files and folders, but you want to locate the \"dsc_pkg_tool\" executable file. Double click the file to open the tool.","title":"Downloading the Tool"},{"location":"exptrack/","text":"About the Experiment Tracker \u00b6 This tab creates the experiment tracker, which provides context on the experiments involved in the project including research questions, hypotheses, and approach. You may only have one experiment, in which case you only need to go through the process of annotating and adding your experiment to the tracker once. However, if you have multiple experiments in your study, you will need to annotate and add each experiment to the tracker separately. You will only have one experiment tracker for your study, with one entry per experiment. The experiment tracker shell that you will fill in was created and saved when you created your dsc-pkg folder.","title":"About the Experiment Tracker"},{"location":"exptrack/#about-the-experiment-tracker","text":"This tab creates the experiment tracker, which provides context on the experiments involved in the project including research questions, hypotheses, and approach. You may only have one experiment, in which case you only need to go through the process of annotating and adding your experiment to the tracker once. However, if you have multiple experiments in your study, you will need to annotate and add each experiment to the tracker separately. You will only have one experiment tracker for your study, with one entry per experiment. The experiment tracker shell that you will fill in was created and saved when you created your dsc-pkg folder.","title":"About the Experiment Tracker"},{"location":"exptrack/addexp/","text":"Adding a New Experiment \u00b6 Navigate to the \"Add Experiment\" tab and select \"Annotate a new experiment\". Note You may want to open the [HEAL experiment tracker schema] to guide you through how to fill out each of these fields. The experiment ID will generate automatically and sequentially. You can add multiple experimental questions and hypotheses for the same experiment. To add an experiment question/hypothesis, click on the paper icon. To add another, click on the paper icon again. When you have multiple questions/hypotheses entered, you can also change the order using the highlighted arrows. You can also use the 'X' to remove questions/hypotheses entered. Once you have finished entering the experiment information, select \"Save experiment\". Navigate to your dsc-pkg folder, and save this file in the main folder. If the experiment is saved successfully, this message will appear in the User Status Message Box: After you have added a new experiment, you will need to add it to the Experiment Tracker. Click here for guidance on how to add an experiment to the experiment tracker .","title":"Add a New Experiment"},{"location":"exptrack/addexp/#adding-a-new-experiment","text":"Navigate to the \"Add Experiment\" tab and select \"Annotate a new experiment\". Note You may want to open the [HEAL experiment tracker schema] to guide you through how to fill out each of these fields. The experiment ID will generate automatically and sequentially. You can add multiple experimental questions and hypotheses for the same experiment. To add an experiment question/hypothesis, click on the paper icon. To add another, click on the paper icon again. When you have multiple questions/hypotheses entered, you can also change the order using the highlighted arrows. You can also use the 'X' to remove questions/hypotheses entered. Once you have finished entering the experiment information, select \"Save experiment\". Navigate to your dsc-pkg folder, and save this file in the main folder. If the experiment is saved successfully, this message will appear in the User Status Message Box: After you have added a new experiment, you will need to add it to the Experiment Tracker. Click here for guidance on how to add an experiment to the experiment tracker .","title":"Adding a New Experiment"},{"location":"exptrack/editexp/","text":"Editing the Experiment Tracker \u00b6 If you need to edit anything that you have already input into the Experiment Tracker, you can use the Edit Tracker feature. Warning When you find an error within the Experiment Tracker that you want to fix, we encourage you to go back and re-add the corresponding experiment and re-add to the tracker rather than entering/editing the information manually . The \"Annotate a new experiment\" form automatically puts the information you enter into the correct formatting and structure for the tracker. Manual edits will not necessarily be in the correct format. Navigate to \"View/Edit Tracker\" on the Experiment Tracker tab. Select \"View/Edit CSV\". The window below will pop up. Select \"Load CSV\" Find and select the experiment tracker. Your experiment tracker will populate in the window. Using this window, you can add blank rows or columns, delete rows or columns, and print/print preview the worksheet. You can also directly enter information in this window by selecting a cell. After you make any changes, you will need to \"Save CSV\" before closing this window for those changes to take effect.","title":"Editing the Experiment Tracker"},{"location":"exptrack/editexp/#editing-the-experiment-tracker","text":"If you need to edit anything that you have already input into the Experiment Tracker, you can use the Edit Tracker feature. Warning When you find an error within the Experiment Tracker that you want to fix, we encourage you to go back and re-add the corresponding experiment and re-add to the tracker rather than entering/editing the information manually . The \"Annotate a new experiment\" form automatically puts the information you enter into the correct formatting and structure for the tracker. Manual edits will not necessarily be in the correct format. Navigate to \"View/Edit Tracker\" on the Experiment Tracker tab. Select \"View/Edit CSV\". The window below will pop up. Select \"Load CSV\" Find and select the experiment tracker. Your experiment tracker will populate in the window. Using this window, you can add blank rows or columns, delete rows or columns, and print/print preview the worksheet. You can also directly enter information in this window by selecting a cell. After you make any changes, you will need to \"Save CSV\" before closing this window for those changes to take effect.","title":"Editing the Experiment Tracker"},{"location":"exptrack/exptotrack/","text":"Adding an Experiment to the Experiment Tracker \u00b6 After adding a new experiment, you will need to add it to your study's Experiment Tracker. Close the \"Annotate a new experiment\" window and select \"Add experiment to tracker\" in the \"Add Experiment\" tab. When the File Explorer window pops up, navigate to the dsc-pkg folder and select the text file you want to add to the tracker. For the first experiment added, the file name will be \"exp-trk-exp-1\". A second File Explorer window will pop up prompting you to select the data package directory where the experiment tracker is saved. This will be your dsc-pkg folder, which is the same location where your experiment text file was saved. Select the dsc-pkg folder. Once selected, the User Status Message Box should display a confirmation message: Navigate to your dsc-pkg folder in your File Explorer and open your Experiment Tracker file. Confirm your experiment appears in the tracker. This step is not required, but it is recommended you check the tracker output after adding your first experiment to ensure the output looks correct. Editing the Tracker If you review your Experiment Tracker at any point and find there is something you would like to add to an entry or an error that you would like to correct, you can view and edit the tracker in the tool .","title":"Add an Experiment to the Experiment Tracker"},{"location":"exptrack/exptotrack/#adding-an-experiment-to-the-experiment-tracker","text":"After adding a new experiment, you will need to add it to your study's Experiment Tracker. Close the \"Annotate a new experiment\" window and select \"Add experiment to tracker\" in the \"Add Experiment\" tab. When the File Explorer window pops up, navigate to the dsc-pkg folder and select the text file you want to add to the tracker. For the first experiment added, the file name will be \"exp-trk-exp-1\". A second File Explorer window will pop up prompting you to select the data package directory where the experiment tracker is saved. This will be your dsc-pkg folder, which is the same location where your experiment text file was saved. Select the dsc-pkg folder. Once selected, the User Status Message Box should display a confirmation message: Navigate to your dsc-pkg folder in your File Explorer and open your Experiment Tracker file. Confirm your experiment appears in the tracker. This step is not required, but it is recommended you check the tracker output after adding your first experiment to ensure the output looks correct. Editing the Tracker If you review your Experiment Tracker at any point and find there is something you would like to add to an entry or an error that you would like to correct, you can view and edit the tracker in the tool .","title":"Adding an Experiment to the Experiment Tracker"},{"location":"schemas/","text":"Standard Data Package Metadata Schemas \u00b6 Schemas \u00b6 View metadata schemas. Experiment Tracker Resource Tracker Results Tracker CSV Templates \u00b6 Download metadata csv templates. Experiment Tracker Resource Tracker Results Tracker","title":"Standard Data Package Metadata Schemas"},{"location":"schemas/#standard-data-package-metadata-schemas","text":"","title":"Standard Data Package Metadata Schemas"},{"location":"schemas/#schemas","text":"View metadata schemas. Experiment Tracker Resource Tracker Results Tracker","title":"Schemas"},{"location":"schemas/#csv-templates","text":"Download metadata csv templates. Experiment Tracker Resource Tracker Results Tracker","title":"CSV Templates"},{"location":"schemas/md_experiment_tracker/","text":"HEAL Experiment Tracker \u00b6 HEAL DSC Core Metadata piece to track and provide basic information about experiment(s) you will perform as part of your HEAL study. Clinical studies will often have only one experiment to report, while basic science studies often have several experiments that are grouped together under a single study. Properties \u00b6 experiment.id (string) : id assigned to each experiment relevant to the data package; prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment (i.e. exp-1, exp-2, etc.). experiment.type (string) : discovery|materials and methods development. Must be one of: [\"discovery\", \"materials and methods development\"] . experiment.description (string) : provide a brief description of the experiment; this is NOT a protocol. experiment.question (array) : what question(s) does the experimentalist hope to address with this experiment? be as specific as possible. Items (string) experiment.hypothesis (array) : for each question the experimentalist hopes to address with this experiment, what does the experimentalist hypothesize will be the result(s) of the experiment? Be as specific as possible. Items (string)","title":"HEAL Experiment Tracker"},{"location":"schemas/md_experiment_tracker/#heal-experiment-tracker","text":"HEAL DSC Core Metadata piece to track and provide basic information about experiment(s) you will perform as part of your HEAL study. Clinical studies will often have only one experiment to report, while basic science studies often have several experiments that are grouped together under a single study.","title":"HEAL Experiment Tracker"},{"location":"schemas/md_experiment_tracker/#properties","text":"experiment.id (string) : id assigned to each experiment relevant to the data package; prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment (i.e. exp-1, exp-2, etc.). experiment.type (string) : discovery|materials and methods development. Must be one of: [\"discovery\", \"materials and methods development\"] . experiment.description (string) : provide a brief description of the experiment; this is NOT a protocol. experiment.question (array) : what question(s) does the experimentalist hope to address with this experiment? be as specific as possible. Items (string) experiment.hypothesis (array) : for each question the experimentalist hopes to address with this experiment, what does the experimentalist hypothesize will be the result(s) of the experiment? Be as specific as possible. Items (string)","title":"Properties"},{"location":"schemas/md_resource_tracker/","text":"HEAL Resource Tracker \u00b6 HEAL DSC Core Metadata piece to track and provide basic information about resource(s)/file(s) that support/are produced by/result from experiments you perform/will perform as part of your HEAL study.Objective is to list at least all files that will be submitted to a data repository in order to describe what each file is, how they relate to each other/how to use them, and how they relate to results/publications shared by the study group. Files may include results files (e.g. publications or draft publications/pieces of publications), processed and raw data files, protocol and analytic plan files, data dictionaries for tabular data files, other metadata as appropriate to data/field type, etc. Properties \u00b6 resource.id (string) : Unique ID assigned to each resource file; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add DSC Package button above the form to add your DSC Package Directory. Auto-assignment of IDs occurs by searching the directory for any resource annotation files already saved, identifying the resource ID with the highest resource ID number, and adding 1 to that number to get the resource ID number and unique resource ID for the current resource. path (string) : The full file path to your resource file. If you are using the DSC Packaging application and would like to use a single form to annotate multiple 'like' files, click the 'Add Multiple like Files' button above the form and drag and drop all of the like files you want to annotate together in that box. The file path for the first of the file paths you dropped in the box will be added to this field. description (string) : A description of your resource. For resources that consist of multiple 'like' files, provide a description of the multi-file resource here and use the Resource File Description field to provide any description specific to each/any one specific file in the set. category (string) : Broad category your resource falls into; Generally, these categories are: results, data, metadata, code. However, the actual category options parse the categories just a bit finer (e.g. options for data resources include either 'tabular-data' or 'non-tabular-data'). Must be one of: [\"\", \"multi-result\", \"single-result\", \"tabular-data\", \"non-tabular-data\", \"metadata\", \"code\"] . exp.belongs.to (string) : If the file pertains specifically to one of the study experiments, list the experiment ID for that experiment here; If the file pertains to more than one experiment, or to all experiments/the study as a whole, leave this blank; Use the experiment ID as assigned/formatted in your Experiment Tracker file (prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment - i.e. exp-1, exp-2, etc.). name (string) : File path stem; Auto-inferred from file path. title (string) : Human-readable title/name of resource. description.file.name.convention (string) : For multi-file resource containing multiple files of the same type (multiple 'like' files), provide the naming convention of the files (e.g. for a file set: [subject-01-protocol-A-day-2020-06-05.csv, subject-02-protocol-A-day-2020-06-05.csv, subject-02-protocol-B-day-2020-12-05.csv], you would specify the naming convention as: subject-{subject ID}-protocol-{protocol ID}-day-{date of measurment in YYYY-MM-DD}). If you are using the DSC Packaging application, you can use the Apply Name Convention button above the form to validate your name convention format and use a valid file name convention to generate a minimal 'Resource File Description' that is a minimal description specific to each file in the multi-file resource set. description.file (string) : For a multi-file resource containing multiple files of the same type (multiple 'like' files), a description specific to the specific current file that is a component of that multi-file set. description.row (string) : For a tabular data resource, a description of what one row in the tabular data resource represents; e.g. one row represents one subject at one timepoint. category.sub.metadata (string) : Sub-category for a metadata resource. Must be one of: [\"\", \"heal-formatted-data-dictionary\", \"other-formatted-data-dictionary\", \"protocol\", \"id-map\", \"analysis-plan\", \"heal-formatted-results-tracker\", \"heal-formatted-experiment-tracker\"] . category.sub.data (string) : Sub-category for a data resource. Must be one of: [\"\", \"raw\", \"processed-intermediate\", \"processed-final\"] . category.sub.results (string) : Sub-category for a results resource. Must be one of: [\"\", \"figure\", \"table\", \"text\", \"draft-publication\", \"publication\", \"report\", \"white-paper\", \"presentation\", \"poster\"] . assoc.file.dd (array) : For a tabular data file resources, a reference/file path to associated data dictionary file(s) - preferably in heal csv data dictionary format. Items (string) assoc.file.protocol (array) : For a data file resource, a reference/file path to associated protocol file(s). Items (string) assoc.file.result.tracker (array) : For a multi-result file resource, a reference/file path to associated HEAL result tracker file - HEAL result tracker is a file that tracks each result in a multi-result file (e.g. a publication, poster, etc.), along with the data and other supporting files that underly/support each result. If you are using the DSC Packaging Desktop Application, you can head to the Result Tracker tab of the application to create a HEAL formatted result tracker for your multi-result resource file(s). Items (string) assoc.file.depends.on (array) : For all resource files, if the current resource file has dependencies/if other files are necessary to make this file (e.g. raw data file necessary to make processed data file), or to interpret/understand this file (e.g. protocol, analysis plan, etc.), list them here; if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc.; if already listed under assoc.file.dd, assoc.file.protocol, or assoc.file.id.map no need to repeat here. Items (string) assoc.file.result.depends.on (array) : if the current resource file is a heal formatted result tracker (this tracks the single results in a multi-result file, like a publication), use this field to list each result in the tracker along with its corresponding dependencies (i.e. files the result depends on, or are necessary to make/reach/interpret the result); if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (object) result.id (string) result.id.depends.on (array) assoc.file.multi.like.file (array) : if the current resource file is annotating a resource that is one of multiple 'like' files, this field will list all files that are part of the resources. Items (string) access (array) : What is the current/final access level anticipated for this resource? Options are permanent-private (current and final access level is private), temporary-private (current access level is private but final access level will be either restricted-access or public), restricted-access (current, final, or current AND final access level will allow request of data with barriers/restrictions to access), public (current, final, or current AND final access level will allow largely unrestricted request of/access to data); Many investigators will designate data as currently temporary-private, with a final access level of either restricted-access or public: In this case choose both temporary-private AND either 1) restricted-access or 2) public, then add the date at which you expect to transition from temporary-private to either restricted-access or public in the Access Date field below; Private means members of the public cannot request access; Restricted access means they can request access but there is gate-keeping; Public access means they can often access the data without requesting access, and with minimal barriers to access. Items (string) : Must be one of: [\"\", \"permanent-private\", \"temporary-private\", \"restricted-access\", \"public\"] . access.date (string) : If the resource file is currently being held as temporary-private access level and will transition to either restricted-access or public access level at some point, please provide an anticipated date at which this transition will occur - Best guesses are appreciated, however you will NOT be held to this date and may update this date at any time. format (string) : auto inferred; e.g. csv. format.software (string) : If the file format of the resource file is proprietary and requires specific software to open/interpret, provide the software name and version used by the study group to produce/work with the file; e.g. Origin 11.0, CorelDraw 5.6. profile (string) : auto inferred; e.g. tabular-data-resource. mediatype (string) : auto inferred; e.g. text/csv. encoding (string) : auto inferred; e.g. utf-8. schema (string) : auto inferred; for tabular resource, schema of fields contained in tabular resource; might replace this with ref to either heal csv dd or heal json dd. resource.create.date.time (string) : Date time of resource creation; auto-inferred. resource.mod.date.time (string) : Date time at which the resource was last modified; auto-inferred. restrk.create.date.time (string) : Date time at which the resource tracker file for the resource was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the resource tracker file for the resource was last modified; auto-inferred.","title":"HEAL Resource Tracker"},{"location":"schemas/md_resource_tracker/#heal-resource-tracker","text":"HEAL DSC Core Metadata piece to track and provide basic information about resource(s)/file(s) that support/are produced by/result from experiments you perform/will perform as part of your HEAL study.Objective is to list at least all files that will be submitted to a data repository in order to describe what each file is, how they relate to each other/how to use them, and how they relate to results/publications shared by the study group. Files may include results files (e.g. publications or draft publications/pieces of publications), processed and raw data files, protocol and analytic plan files, data dictionaries for tabular data files, other metadata as appropriate to data/field type, etc.","title":"HEAL Resource Tracker"},{"location":"schemas/md_resource_tracker/#properties","text":"resource.id (string) : Unique ID assigned to each resource file; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add DSC Package button above the form to add your DSC Package Directory. Auto-assignment of IDs occurs by searching the directory for any resource annotation files already saved, identifying the resource ID with the highest resource ID number, and adding 1 to that number to get the resource ID number and unique resource ID for the current resource. path (string) : The full file path to your resource file. If you are using the DSC Packaging application and would like to use a single form to annotate multiple 'like' files, click the 'Add Multiple like Files' button above the form and drag and drop all of the like files you want to annotate together in that box. The file path for the first of the file paths you dropped in the box will be added to this field. description (string) : A description of your resource. For resources that consist of multiple 'like' files, provide a description of the multi-file resource here and use the Resource File Description field to provide any description specific to each/any one specific file in the set. category (string) : Broad category your resource falls into; Generally, these categories are: results, data, metadata, code. However, the actual category options parse the categories just a bit finer (e.g. options for data resources include either 'tabular-data' or 'non-tabular-data'). Must be one of: [\"\", \"multi-result\", \"single-result\", \"tabular-data\", \"non-tabular-data\", \"metadata\", \"code\"] . exp.belongs.to (string) : If the file pertains specifically to one of the study experiments, list the experiment ID for that experiment here; If the file pertains to more than one experiment, or to all experiments/the study as a whole, leave this blank; Use the experiment ID as assigned/formatted in your Experiment Tracker file (prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment - i.e. exp-1, exp-2, etc.). name (string) : File path stem; Auto-inferred from file path. title (string) : Human-readable title/name of resource. description.file.name.convention (string) : For multi-file resource containing multiple files of the same type (multiple 'like' files), provide the naming convention of the files (e.g. for a file set: [subject-01-protocol-A-day-2020-06-05.csv, subject-02-protocol-A-day-2020-06-05.csv, subject-02-protocol-B-day-2020-12-05.csv], you would specify the naming convention as: subject-{subject ID}-protocol-{protocol ID}-day-{date of measurment in YYYY-MM-DD}). If you are using the DSC Packaging application, you can use the Apply Name Convention button above the form to validate your name convention format and use a valid file name convention to generate a minimal 'Resource File Description' that is a minimal description specific to each file in the multi-file resource set. description.file (string) : For a multi-file resource containing multiple files of the same type (multiple 'like' files), a description specific to the specific current file that is a component of that multi-file set. description.row (string) : For a tabular data resource, a description of what one row in the tabular data resource represents; e.g. one row represents one subject at one timepoint. category.sub.metadata (string) : Sub-category for a metadata resource. Must be one of: [\"\", \"heal-formatted-data-dictionary\", \"other-formatted-data-dictionary\", \"protocol\", \"id-map\", \"analysis-plan\", \"heal-formatted-results-tracker\", \"heal-formatted-experiment-tracker\"] . category.sub.data (string) : Sub-category for a data resource. Must be one of: [\"\", \"raw\", \"processed-intermediate\", \"processed-final\"] . category.sub.results (string) : Sub-category for a results resource. Must be one of: [\"\", \"figure\", \"table\", \"text\", \"draft-publication\", \"publication\", \"report\", \"white-paper\", \"presentation\", \"poster\"] . assoc.file.dd (array) : For a tabular data file resources, a reference/file path to associated data dictionary file(s) - preferably in heal csv data dictionary format. Items (string) assoc.file.protocol (array) : For a data file resource, a reference/file path to associated protocol file(s). Items (string) assoc.file.result.tracker (array) : For a multi-result file resource, a reference/file path to associated HEAL result tracker file - HEAL result tracker is a file that tracks each result in a multi-result file (e.g. a publication, poster, etc.), along with the data and other supporting files that underly/support each result. If you are using the DSC Packaging Desktop Application, you can head to the Result Tracker tab of the application to create a HEAL formatted result tracker for your multi-result resource file(s). Items (string) assoc.file.depends.on (array) : For all resource files, if the current resource file has dependencies/if other files are necessary to make this file (e.g. raw data file necessary to make processed data file), or to interpret/understand this file (e.g. protocol, analysis plan, etc.), list them here; if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc.; if already listed under assoc.file.dd, assoc.file.protocol, or assoc.file.id.map no need to repeat here. Items (string) assoc.file.result.depends.on (array) : if the current resource file is a heal formatted result tracker (this tracks the single results in a multi-result file, like a publication), use this field to list each result in the tracker along with its corresponding dependencies (i.e. files the result depends on, or are necessary to make/reach/interpret the result); if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (object) result.id (string) result.id.depends.on (array) assoc.file.multi.like.file (array) : if the current resource file is annotating a resource that is one of multiple 'like' files, this field will list all files that are part of the resources. Items (string) access (array) : What is the current/final access level anticipated for this resource? Options are permanent-private (current and final access level is private), temporary-private (current access level is private but final access level will be either restricted-access or public), restricted-access (current, final, or current AND final access level will allow request of data with barriers/restrictions to access), public (current, final, or current AND final access level will allow largely unrestricted request of/access to data); Many investigators will designate data as currently temporary-private, with a final access level of either restricted-access or public: In this case choose both temporary-private AND either 1) restricted-access or 2) public, then add the date at which you expect to transition from temporary-private to either restricted-access or public in the Access Date field below; Private means members of the public cannot request access; Restricted access means they can request access but there is gate-keeping; Public access means they can often access the data without requesting access, and with minimal barriers to access. Items (string) : Must be one of: [\"\", \"permanent-private\", \"temporary-private\", \"restricted-access\", \"public\"] . access.date (string) : If the resource file is currently being held as temporary-private access level and will transition to either restricted-access or public access level at some point, please provide an anticipated date at which this transition will occur - Best guesses are appreciated, however you will NOT be held to this date and may update this date at any time. format (string) : auto inferred; e.g. csv. format.software (string) : If the file format of the resource file is proprietary and requires specific software to open/interpret, provide the software name and version used by the study group to produce/work with the file; e.g. Origin 11.0, CorelDraw 5.6. profile (string) : auto inferred; e.g. tabular-data-resource. mediatype (string) : auto inferred; e.g. text/csv. encoding (string) : auto inferred; e.g. utf-8. schema (string) : auto inferred; for tabular resource, schema of fields contained in tabular resource; might replace this with ref to either heal csv dd or heal json dd. resource.create.date.time (string) : Date time of resource creation; auto-inferred. resource.mod.date.time (string) : Date time at which the resource was last modified; auto-inferred. restrk.create.date.time (string) : Date time at which the resource tracker file for the resource was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the resource tracker file for the resource was last modified; auto-inferred.","title":"Properties"},{"location":"schemas/md_results_tracker/","text":"HEAL Results Tracker \u00b6 HEAL DSC Core Metadata piece to track and provide basic information about results statements or figures in a multi-result file (e.g. a publication) that presents results from your HEAL study. Objective is to list at least all results that have been/will be published in order to describe each result, the data/non-data files each result depends on, and how to use these data/non-data files to reproduce published results. Properties \u00b6 result.id (string) : Unique ID assigned to each result; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add Result Tracker button above the form to add your Result Tracker Directory. Auto-assignment of IDs occurs by searching the directory for any result annotation files already saved, identifying the result ID with the highest result ID number, and adding 1 to that number to get the result ID number and unique result ID for the current result. description (string) : A description of your result. For figure results this may be the figure caption. For text results, it is recommended that this text be identical or very similar to the text of result as shared in text of the multi-result file that is published or provided as part of the data package. category (string) : Broad category your result falls into; Generally, these categories are: figure, or text. Must be one of: [\"\", \"figure\", \"table\", \"text\"] . assoc.multi.result.file (array) : The multi-result file(s) in which this result has been shared. Items (string) figure.number (array) : If the result is a figure result, provide the number of the figure as it appears in the corresponding multi-result file; Examples include '1' if the result is in figure 1, or '1a' if the result is in figure 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the figure number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; figure-number-in-file-1, figure-number-in-file-2). Items (string) table.number (array) : If the result is a table result, provide the number of the table as it appears in the corresponding multi-result file; Examples include '1' if the result is in table 1, or '1a' if the result is in table 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the table number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; table-number-in-file-1, table-number-in-file-2). Items (string) assoc.file.depends.on (array) : Data and/or non-data supporting files the result depends upon (e.g. data, analysis plan/code, etc.). If you are using the DSC Packaging App and have many result dependencies to add, you can use the Add Multiple Result Dependencies button above the form to reveal an interface where you can drag and drop many files at once. If documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (string) result.supports (array) : Describe a larger claim(s) that this result is used to support in text that is published or provided as part of the data package. Items (string) restrk.create.date.time (string) : Date time at which the result annotation file for the result was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the result annotation file for the result was last modified; auto-inferred.","title":"HEAL Results Tracker"},{"location":"schemas/md_results_tracker/#heal-results-tracker","text":"HEAL DSC Core Metadata piece to track and provide basic information about results statements or figures in a multi-result file (e.g. a publication) that presents results from your HEAL study. Objective is to list at least all results that have been/will be published in order to describe each result, the data/non-data files each result depends on, and how to use these data/non-data files to reproduce published results.","title":"HEAL Results Tracker"},{"location":"schemas/md_results_tracker/#properties","text":"result.id (string) : Unique ID assigned to each result; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add Result Tracker button above the form to add your Result Tracker Directory. Auto-assignment of IDs occurs by searching the directory for any result annotation files already saved, identifying the result ID with the highest result ID number, and adding 1 to that number to get the result ID number and unique result ID for the current result. description (string) : A description of your result. For figure results this may be the figure caption. For text results, it is recommended that this text be identical or very similar to the text of result as shared in text of the multi-result file that is published or provided as part of the data package. category (string) : Broad category your result falls into; Generally, these categories are: figure, or text. Must be one of: [\"\", \"figure\", \"table\", \"text\"] . assoc.multi.result.file (array) : The multi-result file(s) in which this result has been shared. Items (string) figure.number (array) : If the result is a figure result, provide the number of the figure as it appears in the corresponding multi-result file; Examples include '1' if the result is in figure 1, or '1a' if the result is in figure 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the figure number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; figure-number-in-file-1, figure-number-in-file-2). Items (string) table.number (array) : If the result is a table result, provide the number of the table as it appears in the corresponding multi-result file; Examples include '1' if the result is in table 1, or '1a' if the result is in table 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the table number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; table-number-in-file-1, table-number-in-file-2). Items (string) assoc.file.depends.on (array) : Data and/or non-data supporting files the result depends upon (e.g. data, analysis plan/code, etc.). If you are using the DSC Packaging App and have many result dependencies to add, you can use the Add Multiple Result Dependencies button above the form to reveal an interface where you can drag and drop many files at once. If documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (string) result.supports (array) : Describe a larger claim(s) that this result is used to support in text that is published or provided as part of the data package. Items (string) restrk.create.date.time (string) : Date time at which the result annotation file for the result was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the result annotation file for the result was last modified; auto-inferred.","title":"Properties"},{"location":"section2/","text":"Using the Tool \u00b6 When you open the tool, it will look like this: Tabs \u00b6 The tabs within the tool are organized sequentially to walk through the steps of data packaging: Data Package, Experiment Tracker, Resource Tracker, Data Dictionary, and Results Tracker. Within each of these tabs, there are multiple additional tabs. Each has an \"Info\" tab, which provides information on what the app will create within the selected step. Depending on which domain you are viewing, the additional tabs will vary. Each individual tab will provide the necessary forms and guidance to execute the steps for that domain. App Messages and Guidance \u00b6 User Status Message Box \u00b6 Within each tab, there is a User Status Message Box: The User Status Message Box will print out messages when you make certain selections (e.g., select the data package directory) or save changes to files (e.g., adding a result to a results tracker). The box will provide information on the status of changes and any errors that may occur. It will also provide helpful tips on next steps. This message box is another tool meant to help you through the process, so we advise you to review the messages produced whenever you make a change. Guide to Text Colors \u00b6 Color Form Fields User Status Message Box Blue Required, but can be filled in by an automatic process Information on next steps Green Required Successful process message Black Not required, but useful to include Process message Red N/A Error message","title":"Navigating the Tool"},{"location":"section2/#using-the-tool","text":"When you open the tool, it will look like this:","title":"Using the Tool"},{"location":"section2/#tabs","text":"The tabs within the tool are organized sequentially to walk through the steps of data packaging: Data Package, Experiment Tracker, Resource Tracker, Data Dictionary, and Results Tracker. Within each of these tabs, there are multiple additional tabs. Each has an \"Info\" tab, which provides information on what the app will create within the selected step. Depending on which domain you are viewing, the additional tabs will vary. Each individual tab will provide the necessary forms and guidance to execute the steps for that domain.","title":"Tabs"},{"location":"section2/#app-messages-and-guidance","text":"","title":"App Messages and Guidance"},{"location":"section2/#user-status-message-box","text":"Within each tab, there is a User Status Message Box: The User Status Message Box will print out messages when you make certain selections (e.g., select the data package directory) or save changes to files (e.g., adding a result to a results tracker). The box will provide information on the status of changes and any errors that may occur. It will also provide helpful tips on next steps. This message box is another tool meant to help you through the process, so we advise you to review the messages produced whenever you make a change.","title":"User Status Message Box"},{"location":"section2/#guide-to-text-colors","text":"Color Form Fields User Status Message Box Blue Required, but can be filled in by an automatic process Information on next steps Green Required Successful process message Black Not required, but useful to include Process message Red N/A Error message","title":"Guide to Text Colors"}]}