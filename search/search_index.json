{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HEAL Data Packaging Tool \u00b6 This document walks through the process for creating and completing a a HEAL-compliant \"data package\" using the HEAL Data Packaging Tool. Find out more about the HEAL Data Packaging Tool and how using it can help ease the process of creating a HEAL-compliant data package that will make your data understandable and usable for future researchers: About the Tool and the Trackers \u00b6 Purpose of the HEAL Data Packaging Tool Standard Data Package Metadata Schemas Downloading and Navigating the Tool \u00b6 Downloading the Tool for Windows and Mac Navigating the Tool","title":""},{"location":"#heal-data-packaging-tool","text":"This document walks through the process for creating and completing a a HEAL-compliant \"data package\" using the HEAL Data Packaging Tool. Find out more about the HEAL Data Packaging Tool and how using it can help ease the process of creating a HEAL-compliant data package that will make your data understandable and usable for future researchers:","title":"HEAL Data Packaging Tool"},{"location":"#about-the-tool-and-the-trackers","text":"Purpose of the HEAL Data Packaging Tool Standard Data Package Metadata Schemas","title":"About the Tool and the Trackers"},{"location":"#downloading-and-navigating-the-tool","text":"Downloading the Tool for Windows and Mac Navigating the Tool","title":"Downloading and Navigating the Tool"},{"location":"pkgdir/","text":"Creating a New Data Package \u00b6 The first step in creating your data package will be creating your Data Package directory. The Data Package directory is where you will save all of your data packaging documentation. The \"Data Package\" tab includes directions on how to create a Data Package directory. Creating a Data Package Directory \u00b6 Click on the \"Data Package\" tab. Within the \"Create\" tab, select \"Create New Data Package\". Select the location where you want to save the Data Package directory in the File Explorer pop up window. Once you select a location, the folder \"dsc-pkg\" will appear within that folder. The tool will also display the new folder location in the user status message box: Your new dsc-pkg directory will contain an empty experiment tracker and resource tracker. The following steps will guide you through how to use the tool to fill out the experiment tracker, resource tracker, and results tracker (which will be created as you move through the process of entering results information).","title":"Creating a New Data Package"},{"location":"pkgdir/#creating-a-new-data-package","text":"The first step in creating your data package will be creating your Data Package directory. The Data Package directory is where you will save all of your data packaging documentation. The \"Data Package\" tab includes directions on how to create a Data Package directory.","title":"Creating a New Data Package"},{"location":"pkgdir/#creating-a-data-package-directory","text":"Click on the \"Data Package\" tab. Within the \"Create\" tab, select \"Create New Data Package\". Select the location where you want to save the Data Package directory in the File Explorer pop up window. Once you select a location, the folder \"dsc-pkg\" will appear within that folder. The tool will also display the new folder location in the user status message box: Your new dsc-pkg directory will contain an empty experiment tracker and resource tracker. The following steps will guide you through how to use the tool to fill out the experiment tracker, resource tracker, and results tracker (which will be created as you move through the process of entering results information).","title":"Creating a Data Package Directory"},{"location":"about/","text":"HEAL Data Packaging Tool \u00b6 This document walks through the process for creating and completing a a HEAL-compliant \"data package\" using the HEAL Data Packaging Tool. Find out more about the HEAL Data Packaging Tool and how using it can help ease the process of creating a HEAL-compliant data package that will make your data understandable and usable for future researchers: About the Tool and the Trackers \u00b6 Purpose of the HEAL Data Packaging Tool Standard Data Package Metadata Schemas Downloading and Navigating the Tool \u00b6 Downloading the Tool for Windows and Mac Navigating the Tool","title":"HEAL Data Packaging Tool"},{"location":"about/#heal-data-packaging-tool","text":"This document walks through the process for creating and completing a a HEAL-compliant \"data package\" using the HEAL Data Packaging Tool. Find out more about the HEAL Data Packaging Tool and how using it can help ease the process of creating a HEAL-compliant data package that will make your data understandable and usable for future researchers:","title":"HEAL Data Packaging Tool"},{"location":"about/#about-the-tool-and-the-trackers","text":"Purpose of the HEAL Data Packaging Tool Standard Data Package Metadata Schemas","title":"About the Tool and the Trackers"},{"location":"about/#downloading-and-navigating-the-tool","text":"Downloading the Tool for Windows and Mac Navigating the Tool","title":"Downloading and Navigating the Tool"},{"location":"about/nav/","text":"Using the Tool \u00b6 Note When you open the tool, the window below will pop up first and start running. Do not close it. Once it executes, the tool will open. You will need to leave this window open when you are using the tool. When the tool loads, it will look like this: Tabs \u00b6 The tabs within the tool are organized sequentially to walk through the steps of data packaging: Data Package, Experiment Tracker, Resource Tracker, Data Dictionary, and Results Tracker. Within each of these tabs, there are multiple additional tabs. Each has an \"Info\" tab, which provides information on what the app will create within the selected step. Depending on which domain you are viewing, the additional tabs will vary. Each individual tab will provide the necessary forms and guidance to execute the steps for that domain. App Messages and Guidance \u00b6 User Status Message Box \u00b6 Within each tab, there is a User Status Message Box: The User Status Message Box will print out messages when you make certain selections (e.g., select the Data Package directory) or save changes to files (e.g., adding a result to a Results Tracker). The box will provide information on the status of changes and any errors that may occur. It will also provide helpful tips on next steps. This message box is another tool meant to help you through the process, so we advise you to review the messages produced whenever you make a change. Guide to Text Colors \u00b6 Color Form Fields User Status Message Box Blue Required, but can be filled in by an automatic process Information on next steps Green Required Successful process message Black Not required, but useful to include Process message Red N/A Error message","title":"Navigating the Tool"},{"location":"about/nav/#using-the-tool","text":"Note When you open the tool, the window below will pop up first and start running. Do not close it. Once it executes, the tool will open. You will need to leave this window open when you are using the tool. When the tool loads, it will look like this:","title":"Using the Tool"},{"location":"about/nav/#tabs","text":"The tabs within the tool are organized sequentially to walk through the steps of data packaging: Data Package, Experiment Tracker, Resource Tracker, Data Dictionary, and Results Tracker. Within each of these tabs, there are multiple additional tabs. Each has an \"Info\" tab, which provides information on what the app will create within the selected step. Depending on which domain you are viewing, the additional tabs will vary. Each individual tab will provide the necessary forms and guidance to execute the steps for that domain.","title":"Tabs"},{"location":"about/nav/#app-messages-and-guidance","text":"","title":"App Messages and Guidance"},{"location":"about/nav/#user-status-message-box","text":"Within each tab, there is a User Status Message Box: The User Status Message Box will print out messages when you make certain selections (e.g., select the Data Package directory) or save changes to files (e.g., adding a result to a Results Tracker). The box will provide information on the status of changes and any errors that may occur. It will also provide helpful tips on next steps. This message box is another tool meant to help you through the process, so we advise you to review the messages produced whenever you make a change.","title":"User Status Message Box"},{"location":"about/nav/#guide-to-text-colors","text":"Color Form Fields User Status Message Box Blue Required, but can be filled in by an automatic process Information on next steps Green Required Successful process message Black Not required, but useful to include Process message Red N/A Error message","title":"Guide to Text Colors"},{"location":"about/purpose/","text":"Purpose of the HEAL Data Packaging Tool \u00b6 Compiling and accurately documenting the aspects of your study's data and supporting documents in a way that will be understandable and usable for future researchers can be a difficult task. This tool was developed to help ease the burden of understanding and effectively fulfilling HEAL data sharing requirements. This tool provides you with easy-to-fill-out forms and added guidance that will help you to document and annotate your study's experiments, results, and resources to maximize your study's findability and replicability by future researchers. When you fill out these forms, the tool will package up the information into different trackers, which you will then deposit into the repository you choose, along with your other data package components, as supporting documentation. The tool and the resulting trackers will provide systematic annotation of your data package, which will make your data package more understandable and usable for researchers interested in the data. For more information on the data packaging process, such as how to prepare your data and supporting documents before starting your package and how to determine your annotation approach, refer to HEAL data packaging guidance .","title":"Purpose"},{"location":"about/purpose/#purpose-of-the-heal-data-packaging-tool","text":"Compiling and accurately documenting the aspects of your study's data and supporting documents in a way that will be understandable and usable for future researchers can be a difficult task. This tool was developed to help ease the burden of understanding and effectively fulfilling HEAL data sharing requirements. This tool provides you with easy-to-fill-out forms and added guidance that will help you to document and annotate your study's experiments, results, and resources to maximize your study's findability and replicability by future researchers. When you fill out these forms, the tool will package up the information into different trackers, which you will then deposit into the repository you choose, along with your other data package components, as supporting documentation. The tool and the resulting trackers will provide systematic annotation of your data package, which will make your data package more understandable and usable for researchers interested in the data. For more information on the data packaging process, such as how to prepare your data and supporting documents before starting your package and how to determine your annotation approach, refer to HEAL data packaging guidance .","title":"Purpose of the HEAL Data Packaging Tool"},{"location":"about/trackers/","text":"The Trackers \u00b6 The tool builds three different trackers that provide a standardized way to supply supporting annotation (metadata) in conjunction with your shared data: an experiment tracker, a resource tracker, and a results tracker. Information on the purpose and general content of each tracker is in the table below. Tracker Purpose Content Experiment tracker Provides contextual information on the experiments involved in the project Details each experiment, including research questions, approach, and hypotheses Resource tracker Provides inventory and annotated information for all data and supporting files List of data and non-data/supporting files, including description, path, and dependencies Results tracker Provides detailed information on all multi-result files List of each result, including type and description; there should be one results tracker per multi-result file The Data Packaging tool will provide you with easy-to-understand forms that feed into these trackers. You will not need to complete them manually within the tracker. For more information on the fields within each tracker, please refer to the metadata schemas .","title":"The Trackers"},{"location":"about/trackers/#the-trackers","text":"The tool builds three different trackers that provide a standardized way to supply supporting annotation (metadata) in conjunction with your shared data: an experiment tracker, a resource tracker, and a results tracker. Information on the purpose and general content of each tracker is in the table below. Tracker Purpose Content Experiment tracker Provides contextual information on the experiments involved in the project Details each experiment, including research questions, approach, and hypotheses Resource tracker Provides inventory and annotated information for all data and supporting files List of data and non-data/supporting files, including description, path, and dependencies Results tracker Provides detailed information on all multi-result files List of each result, including type and description; there should be one results tracker per multi-result file The Data Packaging tool will provide you with easy-to-understand forms that feed into these trackers. You will not need to complete them manually within the tracker. For more information on the fields within each tracker, please refer to the metadata schemas .","title":"The Trackers"},{"location":"about/download/start-mac/","text":"Running the Desktop Application Tool for Mac \u00b6 Mac users can run the application tool locally from source code. Note that when you run the tool locally from source code, you must always use the command line (terminal) to open the tool. Once you have completed the steps in the 'Initial Set-Up' section, you can just follow the instruction sin the 'Run the app locally (from source code)' section below each time you want to run the tool. Instructions \u00b6 Initial Set-Up \u00b6 Check if you have python 3 installed. If you don't have python 3, install it. During installation, make sure you select the option to install pip at the same time. In the \"Installation Type\" section of the install, select the option to customize the installation and ensure that \"Install or upgrade pip is checked.\" If you have python 3 installed already, check if you have pip installed; if not, install it. Download DSC Desktop Application Tool zipped source code directory from here . To download: Expand \"Assets\" and click to download \"Source code (zip)\". Note: Disregard the dsc-pkg-tool-mac.zip for now, as that is still in development. The folder should automatically unzip to Downloads. Open terminal. You can open terminal by searching for it within Launchpad or Finder. Navigate to the extracted DSC Desktop Application Tool directory. The extracted dir name will start with \u2018heal-data-pkg-tool-\u2018 Navigate into this directory Within this directory, there will be many files Make sure the following files exist in this directory Requirements.txt Dsc_pkg_tool.py Warning Do not move the dsc_pkg_tool.py file from its location within the 'heal-data-pkg-tool-' folder - the executable requires the other contents contained within the folder to function. Create and activate a new python virtual environment. Make sure to name it something unique, memorable and relevant \u2013 e.g. dsc-pkg-env. Virtual environments in python To create and activate a virtual environment, follow these steps: Install virtual environment: pip3 install virtualenv Create virtual environment: virtualenv name-of-environment Activate virtual environment: source name-of-environment/bin/activate Install required packages into python virtual environment from the requirements.txt file: \u2018pip install -r requirements.txt\u2019 Note You may receive an \"inactive developer path\" error when trying to install requirements.txt. This error can be resolved by re-installing the Command Line Tools package. Enter and run this command, and then try to install requirements.txt, again. If that still does not work, please contact us and we will help you to troubleshoot. xcode-select --install Running the application tool locally from source code \u00b6 Navigate to the DSC Desktop Application Tool directory (dir with requirements.txt and dsc_pkg_tool.py files) Activate the python virtual environment you created during initial set-up steps above Run the app from the command line: \u2018python3 dsc_pkg_tool.py\u2019 If this doesn't work for you, try 'py dsc_pkg_tool.py' and 'python dsc_pkg_tool.py' This should launch a multi-tab GUI (see below). If it does this \u2013 Success! If it does not do this \u2013 Please contact us and we will help you to troubleshoot","title":"Mac"},{"location":"about/download/start-mac/#running-the-desktop-application-tool-for-mac","text":"Mac users can run the application tool locally from source code. Note that when you run the tool locally from source code, you must always use the command line (terminal) to open the tool. Once you have completed the steps in the 'Initial Set-Up' section, you can just follow the instruction sin the 'Run the app locally (from source code)' section below each time you want to run the tool.","title":"Running the Desktop Application Tool for Mac"},{"location":"about/download/start-mac/#instructions","text":"","title":"Instructions"},{"location":"about/download/start-mac/#initial-set-up","text":"Check if you have python 3 installed. If you don't have python 3, install it. During installation, make sure you select the option to install pip at the same time. In the \"Installation Type\" section of the install, select the option to customize the installation and ensure that \"Install or upgrade pip is checked.\" If you have python 3 installed already, check if you have pip installed; if not, install it. Download DSC Desktop Application Tool zipped source code directory from here . To download: Expand \"Assets\" and click to download \"Source code (zip)\". Note: Disregard the dsc-pkg-tool-mac.zip for now, as that is still in development. The folder should automatically unzip to Downloads. Open terminal. You can open terminal by searching for it within Launchpad or Finder. Navigate to the extracted DSC Desktop Application Tool directory. The extracted dir name will start with \u2018heal-data-pkg-tool-\u2018 Navigate into this directory Within this directory, there will be many files Make sure the following files exist in this directory Requirements.txt Dsc_pkg_tool.py Warning Do not move the dsc_pkg_tool.py file from its location within the 'heal-data-pkg-tool-' folder - the executable requires the other contents contained within the folder to function. Create and activate a new python virtual environment. Make sure to name it something unique, memorable and relevant \u2013 e.g. dsc-pkg-env. Virtual environments in python To create and activate a virtual environment, follow these steps: Install virtual environment: pip3 install virtualenv Create virtual environment: virtualenv name-of-environment Activate virtual environment: source name-of-environment/bin/activate Install required packages into python virtual environment from the requirements.txt file: \u2018pip install -r requirements.txt\u2019 Note You may receive an \"inactive developer path\" error when trying to install requirements.txt. This error can be resolved by re-installing the Command Line Tools package. Enter and run this command, and then try to install requirements.txt, again. If that still does not work, please contact us and we will help you to troubleshoot. xcode-select --install","title":"Initial Set-Up"},{"location":"about/download/start-mac/#running-the-application-tool-locally-from-source-code","text":"Navigate to the DSC Desktop Application Tool directory (dir with requirements.txt and dsc_pkg_tool.py files) Activate the python virtual environment you created during initial set-up steps above Run the app from the command line: \u2018python3 dsc_pkg_tool.py\u2019 If this doesn't work for you, try 'py dsc_pkg_tool.py' and 'python dsc_pkg_tool.py' This should launch a multi-tab GUI (see below). If it does this \u2013 Success! If it does not do this \u2013 Please contact us and we will help you to troubleshoot","title":"Running the application tool locally from source code"},{"location":"about/download/start-win/","text":"Downloading the Desktop Application Tool for Windows \u00b6 What to Do First Delete previous version(s) of the tool: If you have downloaded a previous version of the tool, delete the previous version of the tool (dsc-pkg-tool-windows\\dsc_pkg_tool\\ folder) prior to downloading and unzipping the current version of the tool, as having more than one version of the tool in the same file location may lead to problems with duplicate file names. DO NOT delete your dsc-pkg folder or contents: If you have already used the tool to create/initialize your data package (i.e. created your dsc-pkg folder within your study folder), DO NOT delete your dsc-pkg folder or any of its contents (i.e. standard data package metadata files such as experiment, resource, and results trackers and data dictionaries) Navigate to the latest release for the tool . Expand \"Assets\" and select \"dsc-pkg-tool-windows.zip\" to download the tool. Unzip the files. You can unzip the files to your downloads folder or to another folder that you prefer, but you must unzip the files in order to be able to run and open the tool successfully. Once you have unzipped the files, open the newly created dsc-pkg-tool folder. Within this folder, there will be many files and folders, but you want to locate the \"dsc_pkg_tool\" executable file. Double click the file to open the tool. Warning Do not move the dsc_pkg_tool.exe file from its location within the dsc-pkg-tool-windows\\dsc_pkg_tool\\ folder - the executable requires the other contents contained within the folder to function.","title":"Windows"},{"location":"about/download/start-win/#downloading-the-desktop-application-tool-for-windows","text":"What to Do First Delete previous version(s) of the tool: If you have downloaded a previous version of the tool, delete the previous version of the tool (dsc-pkg-tool-windows\\dsc_pkg_tool\\ folder) prior to downloading and unzipping the current version of the tool, as having more than one version of the tool in the same file location may lead to problems with duplicate file names. DO NOT delete your dsc-pkg folder or contents: If you have already used the tool to create/initialize your data package (i.e. created your dsc-pkg folder within your study folder), DO NOT delete your dsc-pkg folder or any of its contents (i.e. standard data package metadata files such as experiment, resource, and results trackers and data dictionaries) Navigate to the latest release for the tool . Expand \"Assets\" and select \"dsc-pkg-tool-windows.zip\" to download the tool. Unzip the files. You can unzip the files to your downloads folder or to another folder that you prefer, but you must unzip the files in order to be able to run and open the tool successfully. Once you have unzipped the files, open the newly created dsc-pkg-tool folder. Within this folder, there will be many files and folders, but you want to locate the \"dsc_pkg_tool\" executable file. Double click the file to open the tool. Warning Do not move the dsc_pkg_tool.exe file from its location within the dsc-pkg-tool-windows\\dsc_pkg_tool\\ folder - the executable requires the other contents contained within the folder to function.","title":"Downloading the Desktop Application Tool for Windows"},{"location":"exptrack/","text":"About the Experiment Tracker \u00b6 This tab creates the experiment tracker, which provides context on the experiments involved in the project including research questions, hypotheses, and approach. You may only have one experiment, in which case you only need to go through the process of annotating and adding your experiment to the tracker once. However, if you have multiple experiments in your study, you will need to annotate and add each experiment to the tracker separately. You will only have one experiment tracker for your study, with one entry per experiment. The experiment tracker shell that you will fill in was created and saved when you created your dsc-pkg folder. Example of an Experiment Tracker with one experiment entered:","title":"About the Experiment Tracker"},{"location":"exptrack/#about-the-experiment-tracker","text":"This tab creates the experiment tracker, which provides context on the experiments involved in the project including research questions, hypotheses, and approach. You may only have one experiment, in which case you only need to go through the process of annotating and adding your experiment to the tracker once. However, if you have multiple experiments in your study, you will need to annotate and add each experiment to the tracker separately. You will only have one experiment tracker for your study, with one entry per experiment. The experiment tracker shell that you will fill in was created and saved when you created your dsc-pkg folder. Example of an Experiment Tracker with one experiment entered:","title":"About the Experiment Tracker"},{"location":"exptrack/addexp/","text":"Adding a New Experiment \u00b6 Getting Started Annotating \u00b6 Navigate to the \"Add Experiment\" tab and select \"Annotate a new experiment\". The experiment ID will generate automatically and sequentially. Filling Out the Form \u00b6 Tip For additional information about each form field, please refer to the Experiment Tracker schema . You can add multiple experimental questions and hypotheses for the same experiment. To add an experiment question/hypothesis, click on the paper icon. To add another, click on the paper icon again. When you have multiple questions/hypotheses entered, you can also change the order using the highlighted arrows. You can also use the 'X' to remove questions/hypotheses entered. Saving Your Experiment \u00b6 Once you have finished entering the experiment information, select \"Save experiment.\" Navigate to your dsc-pkg folder, and save this file in the main folder. If the experiment is saved successfully, this message will appear in the User Status Message Box: Your experiment annotation will be saved as a .txt file within the dsc-pkg folder. After you have added a new experiment, you can annotate a new experiment or add annotated experiment(s) to the Experiment Tracker. Click here for guidance on how to add an experiment to the Experiment Tracker .","title":"Add a New Experiment"},{"location":"exptrack/addexp/#adding-a-new-experiment","text":"","title":"Adding a New Experiment"},{"location":"exptrack/addexp/#getting-started-annotating","text":"Navigate to the \"Add Experiment\" tab and select \"Annotate a new experiment\". The experiment ID will generate automatically and sequentially.","title":"Getting Started Annotating"},{"location":"exptrack/addexp/#filling-out-the-form","text":"Tip For additional information about each form field, please refer to the Experiment Tracker schema . You can add multiple experimental questions and hypotheses for the same experiment. To add an experiment question/hypothesis, click on the paper icon. To add another, click on the paper icon again. When you have multiple questions/hypotheses entered, you can also change the order using the highlighted arrows. You can also use the 'X' to remove questions/hypotheses entered.","title":"Filling Out the Form"},{"location":"exptrack/addexp/#saving-your-experiment","text":"Once you have finished entering the experiment information, select \"Save experiment.\" Navigate to your dsc-pkg folder, and save this file in the main folder. If the experiment is saved successfully, this message will appear in the User Status Message Box: Your experiment annotation will be saved as a .txt file within the dsc-pkg folder. After you have added a new experiment, you can annotate a new experiment or add annotated experiment(s) to the Experiment Tracker. Click here for guidance on how to add an experiment to the Experiment Tracker .","title":"Saving Your Experiment"},{"location":"exptrack/editexp/","text":"Viewing the Experiment Tracker \u00b6 If you need to view anything that you have already input into the Experiment Tracker, you can use the View Tracker feature. It may be useful to view your Experiment Tracker within the application to: Review which experiments you have already annotated and determining which you still need to annotate. Find/confirm the experiment ID for a particular experiment to include in resource annotation or to determine edits that need to be made when there has been a change. Navigate to \"View Tracker\" on the Experiment Tracker tab. Select \"View CSV.\" The window below will pop up. Select \"Load CSV.\" Find and select the experiment tracker. Your experiment tracker will populate in the window.","title":"View the Experiment Tracker"},{"location":"exptrack/editexp/#viewing-the-experiment-tracker","text":"If you need to view anything that you have already input into the Experiment Tracker, you can use the View Tracker feature. It may be useful to view your Experiment Tracker within the application to: Review which experiments you have already annotated and determining which you still need to annotate. Find/confirm the experiment ID for a particular experiment to include in resource annotation or to determine edits that need to be made when there has been a change. Navigate to \"View Tracker\" on the Experiment Tracker tab. Select \"View CSV.\" The window below will pop up. Select \"Load CSV.\" Find and select the experiment tracker. Your experiment tracker will populate in the window.","title":"Viewing the Experiment Tracker"},{"location":"exptrack/exptotrack/","text":"Adding an Experiment to the Experiment Tracker \u00b6 After adding a new experiment, you will need to add it to your study's Experiment Tracker. Close the \"Annotate a new experiment\" window and select \"Add experiment to tracker\" in the \"Add Experiment\" tab. When the File Explorer window pops up, navigate to the dsc-pkg folder and select the text file you want to add to the tracker. For the first experiment added, the file name will be \"exp-trk-exp-1\". A second File Explorer window will pop up prompting you to select the data package directory where the experiment tracker is saved. This will be your dsc-pkg folder, which is the same location where your experiment text file was saved. Select the dsc-pkg folder. Once selected, the User Status Message Box should display a confirmation message: Navigate to your dsc-pkg folder in your File Explorer and open your Experiment Tracker file. Confirm your experiment appears in the tracker. This step is not required, but it is recommended you check the tracker output after adding your first experiment to ensure the output looks correct. Viewing the Tracker If you want to review your Experiment Tracker at any point, you can view the current tracker within the tool to identify whether there are errors or changes to be made.","title":"Add an Experiment to the Experiment Tracker"},{"location":"exptrack/exptotrack/#adding-an-experiment-to-the-experiment-tracker","text":"After adding a new experiment, you will need to add it to your study's Experiment Tracker. Close the \"Annotate a new experiment\" window and select \"Add experiment to tracker\" in the \"Add Experiment\" tab. When the File Explorer window pops up, navigate to the dsc-pkg folder and select the text file you want to add to the tracker. For the first experiment added, the file name will be \"exp-trk-exp-1\". A second File Explorer window will pop up prompting you to select the data package directory where the experiment tracker is saved. This will be your dsc-pkg folder, which is the same location where your experiment text file was saved. Select the dsc-pkg folder. Once selected, the User Status Message Box should display a confirmation message: Navigate to your dsc-pkg folder in your File Explorer and open your Experiment Tracker file. Confirm your experiment appears in the tracker. This step is not required, but it is recommended you check the tracker output after adding your first experiment to ensure the output looks correct. Viewing the Tracker If you want to review your Experiment Tracker at any point, you can view the current tracker within the tool to identify whether there are errors or changes to be made.","title":"Adding an Experiment to the Experiment Tracker"},{"location":"resulttrack/","text":"About the Results Tracker \u00b6 This tab creates the results tracker, which provides an annotated inventory of all results included in a multi-result file. The depth and extent of information included in a result tracker will be determined by the approach you have chosen for annotation of your data. This documentation will include information on how you should fill out each form based on your chosen annotation approach. You should create one Results Tracker for each multi-result file (e.g., manuscript, poster, etc.) that you share. If you only have one multi-result file that you are planning to share, you will only need to create one results tracker. However, if you have multiple multi-result files, you will need to create a results tracker for each multi-result file. Example of a Results Tracker with multiple individual results annotated: A Note on the Results Tracker Unlike the experiment tracker and resource tracker shells, which automatically appeared in your dsc-pkg folder, you will create the Results Tracker(s) through the process of adding individual results.","title":"About the Results Tracker"},{"location":"resulttrack/#about-the-results-tracker","text":"This tab creates the results tracker, which provides an annotated inventory of all results included in a multi-result file. The depth and extent of information included in a result tracker will be determined by the approach you have chosen for annotation of your data. This documentation will include information on how you should fill out each form based on your chosen annotation approach. You should create one Results Tracker for each multi-result file (e.g., manuscript, poster, etc.) that you share. If you only have one multi-result file that you are planning to share, you will only need to create one results tracker. However, if you have multiple multi-result files, you will need to create a results tracker for each multi-result file. Example of a Results Tracker with multiple individual results annotated: A Note on the Results Tracker Unlike the experiment tracker and resource tracker shells, which automatically appeared in your dsc-pkg folder, you will create the Results Tracker(s) through the process of adding individual results.","title":"About the Results Tracker"},{"location":"resulttrack/addresult/","text":"Adding a New Result \u00b6 Your first step to creating a new Results Tracker is to start annotating results. You do not need to create a Results Tracker first. The tool will auto-generate the appropriate Results Trackers based on annotated results. Getting Started Annotating \u00b6 Navigate to the \"Add Results\" tab and select \"Annotate a New Result,\" Select \"Add your DSC Package Directory.\" Navigate to your dsc-pkg folder and click \"Select Folder\". This will set your results to be saved to the dsc-pkg folder. This also detects whether there are existing results saved in the folder and automatically generates the next sequential Result ID (e.g., result-1, result-2, etc.). If successful, the User Status Message Box will deliver this message (Note: You may need to scroll within the box to locate the message): Filling Out the Form \u00b6 Tip For additional information about each form field, please refer to the Results Tracker schema . Hovering over each field in the form will provide additional information about what should be contained within the field. For example, for the Result Category field: The Result ID should be automatically generated. Fill out a short Result Description. Result Category \u00b6 Select a Result Category. Based on the Result Category selected, additional questions will appear within the form. For results in any Result Category, you will need to provide the path for the Associated Multi-Result File (e.g., manuscript, poster, etc.), in which the individual result appears. To add, select the arrow below the field: If the result is associated with multiple multi-result files, click the box again and enter the paths to each of the multi-result files here. This will allow the app to create a results tracker for each of those multi-result files in future steps (or add the individual result to the righ results trackers), all of which will be associated with this result. If you selected \"Figure\" within \"Result Category,\" the \"Figure Number\" field will pop up under \"Associated Multi-Result File.\" For each \"Associated Multi-Result File\", you will need to provide a corresponding figure number. Click on the arrow to insert each figure number. Ensure that the figure numbers are in the same order as the multi-result files. You can adjust the order using the green up and down arrows. Associated Files/Dependencies \u00b6 There are two ways to add \"Associated Files/Dependencies,\" manually or via batch add. See below for descriptions of each. Warning You should only utilize one of the below methods for entering dependencies when adding a specific result. If you add some files as associated files/dependencies manually and then utilize the \"Add Multiple Results Dependencies\" option, those files will overwrite the files you entered manually. Manually adding Associated Files/Dependencies \u00b6 If you are adding only a few associated files/dependencies, you can add each row individually using the arrow button: Batch adding Associated Files/Dependencies \u00b6 If you would like to add many associated files at once, you can use the \"Add Multiple Results Dependencies\" option, which can be found at the top of the \"Add Results\" window: Fill in this field with associated files/dependencies using drag-and-drop from your file explorer. The files you drag and drop will automatically appear in the \"Associated Files/Dependencies\" section in the form. Results Support \u00b6 \"Results Supports\" describes the larger claim that the result is used to support in the multi-result file. This is not required but can be very useful for data reuse and interpretation for future researchers. Saving Your Result \u00b6 When you are done filling out the form, select \"Save result.\" The User Status Message Box should display this message to indicate your result saved successfully: Your result annotation will be saved as a .txt file within the dsc-pkg folder. Clear the form. You can now start annotating the next result by selecting the DSC Package Directory. After you annotate results, you will need to add them to the Results Tracker. Click here for guidance on how to add a result to the Results Tracker .","title":"Add a New Result"},{"location":"resulttrack/addresult/#adding-a-new-result","text":"Your first step to creating a new Results Tracker is to start annotating results. You do not need to create a Results Tracker first. The tool will auto-generate the appropriate Results Trackers based on annotated results.","title":"Adding a New Result"},{"location":"resulttrack/addresult/#getting-started-annotating","text":"Navigate to the \"Add Results\" tab and select \"Annotate a New Result,\" Select \"Add your DSC Package Directory.\" Navigate to your dsc-pkg folder and click \"Select Folder\". This will set your results to be saved to the dsc-pkg folder. This also detects whether there are existing results saved in the folder and automatically generates the next sequential Result ID (e.g., result-1, result-2, etc.). If successful, the User Status Message Box will deliver this message (Note: You may need to scroll within the box to locate the message):","title":"Getting Started Annotating"},{"location":"resulttrack/addresult/#filling-out-the-form","text":"Tip For additional information about each form field, please refer to the Results Tracker schema . Hovering over each field in the form will provide additional information about what should be contained within the field. For example, for the Result Category field: The Result ID should be automatically generated. Fill out a short Result Description.","title":"Filling Out the Form"},{"location":"resulttrack/addresult/#result-category","text":"Select a Result Category. Based on the Result Category selected, additional questions will appear within the form. For results in any Result Category, you will need to provide the path for the Associated Multi-Result File (e.g., manuscript, poster, etc.), in which the individual result appears. To add, select the arrow below the field: If the result is associated with multiple multi-result files, click the box again and enter the paths to each of the multi-result files here. This will allow the app to create a results tracker for each of those multi-result files in future steps (or add the individual result to the righ results trackers), all of which will be associated with this result. If you selected \"Figure\" within \"Result Category,\" the \"Figure Number\" field will pop up under \"Associated Multi-Result File.\" For each \"Associated Multi-Result File\", you will need to provide a corresponding figure number. Click on the arrow to insert each figure number. Ensure that the figure numbers are in the same order as the multi-result files. You can adjust the order using the green up and down arrows.","title":"Result Category"},{"location":"resulttrack/addresult/#associated-filesdependencies","text":"There are two ways to add \"Associated Files/Dependencies,\" manually or via batch add. See below for descriptions of each. Warning You should only utilize one of the below methods for entering dependencies when adding a specific result. If you add some files as associated files/dependencies manually and then utilize the \"Add Multiple Results Dependencies\" option, those files will overwrite the files you entered manually.","title":"Associated Files/Dependencies"},{"location":"resulttrack/addresult/#manually-adding-associated-filesdependencies","text":"If you are adding only a few associated files/dependencies, you can add each row individually using the arrow button:","title":"Manually adding Associated Files/Dependencies"},{"location":"resulttrack/addresult/#batch-adding-associated-filesdependencies","text":"If you would like to add many associated files at once, you can use the \"Add Multiple Results Dependencies\" option, which can be found at the top of the \"Add Results\" window: Fill in this field with associated files/dependencies using drag-and-drop from your file explorer. The files you drag and drop will automatically appear in the \"Associated Files/Dependencies\" section in the form.","title":"Batch adding Associated Files/Dependencies"},{"location":"resulttrack/addresult/#results-support","text":"\"Results Supports\" describes the larger claim that the result is used to support in the multi-result file. This is not required but can be very useful for data reuse and interpretation for future researchers.","title":"Results Support"},{"location":"resulttrack/addresult/#saving-your-result","text":"When you are done filling out the form, select \"Save result.\" The User Status Message Box should display this message to indicate your result saved successfully: Your result annotation will be saved as a .txt file within the dsc-pkg folder. Clear the form. You can now start annotating the next result by selecting the DSC Package Directory. After you annotate results, you will need to add them to the Results Tracker. Click here for guidance on how to add a result to the Results Tracker .","title":"Saving Your Result"},{"location":"resulttrack/editresult/","text":"Editing a Result \u00b6 If you want to edit a result after you have created it, you can do so in the tool using the \"Edit existing result\" feature. Info We encourage you to use the form to edit your results rather than entering/editing information manually into the Results Tracker CSV, as the tool will automatically put your information into the correct formatting and structure. Manual edits will not necessarily be in the correct format. Select \"Edit existing result\" in the \"Add Result\" tab. Navigate to your dsc-pkg folder and select the annotated result .txt file that you want to edit. For example: The information on your annotated result will populate in the \"Annotate Result\" window. When you edit your first result, the tool will create an \"archive\" folder and will archive the original version of your result annotation (.txt) file there, so there are no issues with file naming. The User Status Message Box will also display a message providing information on the location of the original annotation file. Note Currently you can only edit a result once within the tool, due to an issue of duplicate files in the archive folder. This will be addressed in later releases of the tool. For a temporary fix, if you need to make second or third edits to the same result file, you should go into the archive folder and change the name of the result txt file saved there (for example, you can change the name from \"result-trk-result-1\" to \"result-trk-result-1-1\"). Make any necessary edits to your result file, and then select \"Save result.\"","title":"Edit a Result"},{"location":"resulttrack/editresult/#editing-a-result","text":"If you want to edit a result after you have created it, you can do so in the tool using the \"Edit existing result\" feature. Info We encourage you to use the form to edit your results rather than entering/editing information manually into the Results Tracker CSV, as the tool will automatically put your information into the correct formatting and structure. Manual edits will not necessarily be in the correct format. Select \"Edit existing result\" in the \"Add Result\" tab. Navigate to your dsc-pkg folder and select the annotated result .txt file that you want to edit. For example: The information on your annotated result will populate in the \"Annotate Result\" window. When you edit your first result, the tool will create an \"archive\" folder and will archive the original version of your result annotation (.txt) file there, so there are no issues with file naming. The User Status Message Box will also display a message providing information on the location of the original annotation file. Note Currently you can only edit a result once within the tool, due to an issue of duplicate files in the archive folder. This will be addressed in later releases of the tool. For a temporary fix, if you need to make second or third edits to the same result file, you should go into the archive folder and change the name of the result txt file saved there (for example, you can change the name from \"result-trk-result-1\" to \"result-trk-result-1-1\"). Make any necessary edits to your result file, and then select \"Save result.\"","title":"Editing a Result"},{"location":"resulttrack/resulttotrack/","text":"Adding Result(s) to Result Tracker(s) \u00b6 Once you have annotated your results files, close the \"Annotate Result\" window and return to the \"Add Result\" tab. Click on \"Add result to tracker.\" Navigate to the results that you want to add. You can select multiple by holding down \"ctrl\" (\"command\" on a Mac) while selecting your results files. After selecting these files, another window will pop up to select your DSC package directory, which is where your results trackers will generate (this should be the same folder where your results annotation txt files are saved). If you have not already created results trackers, your folder should show no trackers found when you select the dsc-pkg folder: Once you select the folder, you will receive information in the User Status Message Box notifying you that the Results Tracker(s) have been created based on your results file(s). In the example below, results added were associated with two different multi-result files, so two results trackers were created and saved in the dsc-pkg folder. And the individual results were automatically entered into each tracker, as appropriate. Once the Results Trackers have been generated through this step, you can still continue to add results to your existing Results Trackers using the \"Add result to tracker\" option. New results will be added to the corresponding Results Tracker files. Once you have entered a few results, you may want to review your Results Tracker(s) to ensure that your results have been entered correctly. Viewing and Editing the Tracker You can review your Results Tracker at any point using the view feature . If you find there is something you would like to add to an entry or an error that you would like to correct, you can edit any result within the tool .","title":"Add a Result to the Result Tracker(s)"},{"location":"resulttrack/resulttotrack/#adding-results-to-result-trackers","text":"Once you have annotated your results files, close the \"Annotate Result\" window and return to the \"Add Result\" tab. Click on \"Add result to tracker.\" Navigate to the results that you want to add. You can select multiple by holding down \"ctrl\" (\"command\" on a Mac) while selecting your results files. After selecting these files, another window will pop up to select your DSC package directory, which is where your results trackers will generate (this should be the same folder where your results annotation txt files are saved). If you have not already created results trackers, your folder should show no trackers found when you select the dsc-pkg folder: Once you select the folder, you will receive information in the User Status Message Box notifying you that the Results Tracker(s) have been created based on your results file(s). In the example below, results added were associated with two different multi-result files, so two results trackers were created and saved in the dsc-pkg folder. And the individual results were automatically entered into each tracker, as appropriate. Once the Results Trackers have been generated through this step, you can still continue to add results to your existing Results Trackers using the \"Add result to tracker\" option. New results will be added to the corresponding Results Tracker files. Once you have entered a few results, you may want to review your Results Tracker(s) to ensure that your results have been entered correctly. Viewing and Editing the Tracker You can review your Results Tracker at any point using the view feature . If you find there is something you would like to add to an entry or an error that you would like to correct, you can edit any result within the tool .","title":"Adding Result(s) to Result Tracker(s)"},{"location":"resulttrack/viewresult/","text":"Viewing the Results Tracker \u00b6 If you need to view anything that you have already input into the Results Tracker, you can use the View Tracker feature. It may be useful to view your Results Tracker within the application to: Review which individual results associated with a multi-result file that you have already annotated and determining which you still need to annotate. Find/confirm the result ID for a particular result to determine where edits need to be made when there has been a change. Navigate to \"View Tracker\" on the Results Tracker tab. Select \"View CSV.\" The window below will pop up. Select \"Load CSV.\" Find and select the results tracker. Your results tracker will populate in the window.","title":"View the Results Tracker"},{"location":"resulttrack/viewresult/#viewing-the-results-tracker","text":"If you need to view anything that you have already input into the Results Tracker, you can use the View Tracker feature. It may be useful to view your Results Tracker within the application to: Review which individual results associated with a multi-result file that you have already annotated and determining which you still need to annotate. Find/confirm the result ID for a particular result to determine where edits need to be made when there has been a change. Navigate to \"View Tracker\" on the Results Tracker tab. Select \"View CSV.\" The window below will pop up. Select \"Load CSV.\" Find and select the results tracker. Your results tracker will populate in the window.","title":"Viewing the Results Tracker"},{"location":"schemas/","text":"Standard Data Package Metadata Schemas \u00b6 View metadata schemas. Experiment Tracker Resource Tracker Results Tracker","title":"Standard Data Package Metadata Schemas"},{"location":"schemas/#standard-data-package-metadata-schemas","text":"View metadata schemas. Experiment Tracker Resource Tracker Results Tracker","title":"Standard Data Package Metadata Schemas"},{"location":"schemas/md_experiment_tracker/","text":"HEAL Experiment Tracker \u00b6 HEAL DSC Core Metadata piece to track and provide basic information about experiment(s) you will perform as part of your HEAL study. Clinical studies will often have only one experiment to report, while basic science studies often have several experiments that are grouped together under a single study. Properties \u00b6 experiment.id (string) : id assigned to each experiment relevant to the data package; prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment (i.e. exp-1, exp-2, etc.). experiment.type (string) : discovery|materials and methods development. Must be one of: [\"discovery\", \"materials and methods development\"] . experiment.description (string) : provide a brief description of the experiment; this is NOT a protocol. experiment.question (array) : what question(s) does the experimentalist hope to address with this experiment? be as specific as possible. Items (string) experiment.hypothesis (array) : for each question the experimentalist hopes to address with this experiment, what does the experimentalist hypothesize will be the result(s) of the experiment? Be as specific as possible. Items (string)","title":"Experiment Tracker"},{"location":"schemas/md_experiment_tracker/#heal-experiment-tracker","text":"HEAL DSC Core Metadata piece to track and provide basic information about experiment(s) you will perform as part of your HEAL study. Clinical studies will often have only one experiment to report, while basic science studies often have several experiments that are grouped together under a single study.","title":"HEAL Experiment Tracker"},{"location":"schemas/md_experiment_tracker/#properties","text":"experiment.id (string) : id assigned to each experiment relevant to the data package; prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment (i.e. exp-1, exp-2, etc.). experiment.type (string) : discovery|materials and methods development. Must be one of: [\"discovery\", \"materials and methods development\"] . experiment.description (string) : provide a brief description of the experiment; this is NOT a protocol. experiment.question (array) : what question(s) does the experimentalist hope to address with this experiment? be as specific as possible. Items (string) experiment.hypothesis (array) : for each question the experimentalist hopes to address with this experiment, what does the experimentalist hypothesize will be the result(s) of the experiment? Be as specific as possible. Items (string)","title":"Properties"},{"location":"schemas/md_resource_tracker/","text":"HEAL Resource Tracker \u00b6 HEAL DSC Core Metadata piece to track and provide basic information about resource(s)/file(s) that support/are produced by/result from experiments you perform/will perform as part of your HEAL study.Objective is to list at least all files that will be submitted to a data repository in order to describe what each file is, how they relate to each other/how to use them, and how they relate to results/publications shared by the study group. Files may include results files (e.g. publications or draft publications/pieces of publications), processed and raw data files, protocol and analytic plan files, data dictionaries for tabular data files, other metadata as appropriate to data/field type, etc. Properties \u00b6 resource.id (string) : Unique ID assigned to each resource file; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add DSC Package button above the form to add your DSC Package Directory. Auto-assignment of IDs occurs by searching the directory for any resource annotation files already saved, identifying the resource ID with the highest resource ID number, and adding 1 to that number to get the resource ID number and unique resource ID for the current resource. path (string) : The full file path to your resource file. If you are using the DSC Packaging application and would like to use a single form to annotate multiple 'like' files, click the 'Add Multiple like Files' button above the form and drag and drop all of the like files you want to annotate together in that box. The file path for the first of the file paths you dropped in the box will be added to this field. description (string) : A description of your resource. For resources that consist of multiple 'like' files, provide a description of the multi-file resource here and use the Resource File Description field to provide any description specific to each/any one specific file in the set. category (string) : Broad category your resource falls into; Generally, these categories are: results, data, metadata, code. However, the actual category options parse the categories just a bit finer (e.g. options for data resources include either 'tabular-data' or 'non-tabular-data'). Must be one of: [\"\", \"multi-result\", \"single-result\", \"tabular-data\", \"non-tabular-data\", \"metadata\", \"code\"] . exp.belongs.to (string) : If the file pertains specifically to one of the study experiments, list the experiment ID for that experiment here; If the file pertains to more than one experiment, or to all experiments/the study as a whole, leave this blank; Use the experiment ID as assigned/formatted in your Experiment Tracker file (prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment - i.e. exp-1, exp-2, etc.). name (string) : File path stem; Auto-inferred from file path. title (string) : Human-readable title/name of resource. description.file.name.convention (string) : For multi-file resource containing multiple files of the same type (multiple 'like' files), provide the naming convention of the files (e.g. for a file set: [subject-01-protocol-A-day-2020-06-05.csv, subject-02-protocol-A-day-2020-06-05.csv, subject-02-protocol-B-day-2020-12-05.csv], you would specify the naming convention as: subject-{subject ID}-protocol-{protocol ID}-day-{date of measurment in YYYY-MM-DD}). If you are using the DSC Packaging application, you can use the Apply Name Convention button above the form to validate your name convention format and use a valid file name convention to generate a minimal 'Resource File Description' that is a minimal description specific to each file in the multi-file resource set. description.file (string) : For a multi-file resource containing multiple files of the same type (multiple 'like' files), a description specific to the specific current file that is a component of that multi-file set. description.row (string) : For a tabular data resource, a description of what one row in the tabular data resource represents; e.g. one row represents one subject at one timepoint. category.sub.metadata (string) : Sub-category for a metadata resource. Must be one of: [\"\", \"heal-formatted-data-dictionary\", \"other-formatted-data-dictionary\", \"protocol\", \"id-map\", \"analysis-plan\", \"heal-formatted-results-tracker\", \"heal-formatted-experiment-tracker\"] . category.sub.data (string) : Sub-category for a data resource. Must be one of: [\"\", \"raw\", \"processed-intermediate\", \"processed-final\"] . category.sub.results (string) : Sub-category for a results resource. Must be one of: [\"\", \"figure\", \"table\", \"text\", \"draft-publication\", \"publication\", \"report\", \"white-paper\", \"presentation\", \"poster\"] . assoc.file.dd (array) : For a tabular data file resources, a reference/file path to associated data dictionary file(s) - preferably in heal csv data dictionary format. Items (string) assoc.file.protocol (array) : For a data file resource, a reference/file path to associated protocol file(s). Items (string) assoc.file.result.tracker (array) : For a multi-result file resource, a reference/file path to associated HEAL result tracker file - HEAL result tracker is a file that tracks each result in a multi-result file (e.g. a publication, poster, etc.), along with the data and other supporting files that underly/support each result. If you are using the DSC Packaging Desktop Application, you can head to the Result Tracker tab of the application to create a HEAL formatted result tracker for your multi-result resource file(s). Items (string) assoc.file.depends.on (array) : For all resource files, if the current resource file has dependencies/if other files are necessary to make this file (e.g. raw data file necessary to make processed data file), or to interpret/understand this file (e.g. protocol, analysis plan, etc.), list them here; if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc.; if already listed under assoc.file.dd, assoc.file.protocol, or assoc.file.id.map no need to repeat here. Items (string) assoc.file.result.depends.on (array) : if the current resource file is a heal formatted result tracker (this tracks the single results in a multi-result file, like a publication), use this field to list each result in the tracker along with its corresponding dependencies (i.e. files the result depends on, or are necessary to make/reach/interpret the result); if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (object) result.id (string) result.id.depends.on (array) assoc.file.multi.like.file (array) : if the current resource file is annotating a resource that is one of multiple 'like' files, this field will list all files that are part of the resources. Items (string) access (array) : What is the current/final access level anticipated for this resource? Options are permanent-private (current and final access level is private), temporary-private (current access level is private but final access level will be either restricted-access or public), restricted-access (current, final, or current AND final access level will allow request of data with barriers/restrictions to access), public (current, final, or current AND final access level will allow largely unrestricted request of/access to data); Many investigators will designate data as currently temporary-private, with a final access level of either restricted-access or public: In this case choose both temporary-private AND either 1) restricted-access or 2) public, then add the date at which you expect to transition from temporary-private to either restricted-access or public in the Access Date field below; Private means members of the public cannot request access; Restricted access means they can request access but there is gate-keeping; Public access means they can often access the data without requesting access, and with minimal barriers to access. Items (string) : Must be one of: [\"\", \"permanent-private\", \"temporary-private\", \"restricted-access\", \"public\"] . access.date (string) : If the resource file is currently being held as temporary-private access level and will transition to either restricted-access or public access level at some point, please provide an anticipated date at which this transition will occur - Best guesses are appreciated, however you will NOT be held to this date and may update this date at any time. format (string) : auto inferred; e.g. csv. format.software (string) : If the file format of the resource file is proprietary and requires specific software to open/interpret, provide the software name and version used by the study group to produce/work with the file; e.g. Origin 11.0, CorelDraw 5.6. profile (string) : auto inferred; e.g. tabular-data-resource. mediatype (string) : auto inferred; e.g. text/csv. encoding (string) : auto inferred; e.g. utf-8. schema (string) : auto inferred; for tabular resource, schema of fields contained in tabular resource; might replace this with ref to either heal csv dd or heal json dd. resource.create.date.time (string) : Date time of resource creation; auto-inferred. resource.mod.date.time (string) : Date time at which the resource was last modified; auto-inferred. restrk.create.date.time (string) : Date time at which the resource tracker file for the resource was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the resource tracker file for the resource was last modified; auto-inferred.","title":"Resource Tracker"},{"location":"schemas/md_resource_tracker/#heal-resource-tracker","text":"HEAL DSC Core Metadata piece to track and provide basic information about resource(s)/file(s) that support/are produced by/result from experiments you perform/will perform as part of your HEAL study.Objective is to list at least all files that will be submitted to a data repository in order to describe what each file is, how they relate to each other/how to use them, and how they relate to results/publications shared by the study group. Files may include results files (e.g. publications or draft publications/pieces of publications), processed and raw data files, protocol and analytic plan files, data dictionaries for tabular data files, other metadata as appropriate to data/field type, etc.","title":"HEAL Resource Tracker"},{"location":"schemas/md_resource_tracker/#properties","text":"resource.id (string) : Unique ID assigned to each resource file; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add DSC Package button above the form to add your DSC Package Directory. Auto-assignment of IDs occurs by searching the directory for any resource annotation files already saved, identifying the resource ID with the highest resource ID number, and adding 1 to that number to get the resource ID number and unique resource ID for the current resource. path (string) : The full file path to your resource file. If you are using the DSC Packaging application and would like to use a single form to annotate multiple 'like' files, click the 'Add Multiple like Files' button above the form and drag and drop all of the like files you want to annotate together in that box. The file path for the first of the file paths you dropped in the box will be added to this field. description (string) : A description of your resource. For resources that consist of multiple 'like' files, provide a description of the multi-file resource here and use the Resource File Description field to provide any description specific to each/any one specific file in the set. category (string) : Broad category your resource falls into; Generally, these categories are: results, data, metadata, code. However, the actual category options parse the categories just a bit finer (e.g. options for data resources include either 'tabular-data' or 'non-tabular-data'). Must be one of: [\"\", \"multi-result\", \"single-result\", \"tabular-data\", \"non-tabular-data\", \"metadata\", \"code\"] . exp.belongs.to (string) : If the file pertains specifically to one of the study experiments, list the experiment ID for that experiment here; If the file pertains to more than one experiment, or to all experiments/the study as a whole, leave this blank; Use the experiment ID as assigned/formatted in your Experiment Tracker file (prefix is 'exp-' followed by a number starting with 1 for the first experiment, and iterating by 1 for each successive experiment - i.e. exp-1, exp-2, etc.). name (string) : File path stem; Auto-inferred from file path. title (string) : Human-readable title/name of resource. description.file.name.convention (string) : For multi-file resource containing multiple files of the same type (multiple 'like' files), provide the naming convention of the files (e.g. for a file set: [subject-01-protocol-A-day-2020-06-05.csv, subject-02-protocol-A-day-2020-06-05.csv, subject-02-protocol-B-day-2020-12-05.csv], you would specify the naming convention as: subject-{subject ID}-protocol-{protocol ID}-day-{date of measurment in YYYY-MM-DD}). If you are using the DSC Packaging application, you can use the Apply Name Convention button above the form to validate your name convention format and use a valid file name convention to generate a minimal 'Resource File Description' that is a minimal description specific to each file in the multi-file resource set. description.file (string) : For a multi-file resource containing multiple files of the same type (multiple 'like' files), a description specific to the specific current file that is a component of that multi-file set. description.row (string) : For a tabular data resource, a description of what one row in the tabular data resource represents; e.g. one row represents one subject at one timepoint. category.sub.metadata (string) : Sub-category for a metadata resource. Must be one of: [\"\", \"heal-formatted-data-dictionary\", \"other-formatted-data-dictionary\", \"protocol\", \"id-map\", \"analysis-plan\", \"heal-formatted-results-tracker\", \"heal-formatted-experiment-tracker\"] . category.sub.data (string) : Sub-category for a data resource. Must be one of: [\"\", \"raw\", \"processed-intermediate\", \"processed-final\"] . category.sub.results (string) : Sub-category for a results resource. Must be one of: [\"\", \"figure\", \"table\", \"text\", \"draft-publication\", \"publication\", \"report\", \"white-paper\", \"presentation\", \"poster\"] . assoc.file.dd (array) : For a tabular data file resources, a reference/file path to associated data dictionary file(s) - preferably in heal csv data dictionary format. Items (string) assoc.file.protocol (array) : For a data file resource, a reference/file path to associated protocol file(s). Items (string) assoc.file.result.tracker (array) : For a multi-result file resource, a reference/file path to associated HEAL result tracker file - HEAL result tracker is a file that tracks each result in a multi-result file (e.g. a publication, poster, etc.), along with the data and other supporting files that underly/support each result. If you are using the DSC Packaging Desktop Application, you can head to the Result Tracker tab of the application to create a HEAL formatted result tracker for your multi-result resource file(s). Items (string) assoc.file.depends.on (array) : For all resource files, if the current resource file has dependencies/if other files are necessary to make this file (e.g. raw data file necessary to make processed data file), or to interpret/understand this file (e.g. protocol, analysis plan, etc.), list them here; if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc.; if already listed under assoc.file.dd, assoc.file.protocol, or assoc.file.id.map no need to repeat here. Items (string) assoc.file.result.depends.on (array) : if the current resource file is a heal formatted result tracker (this tracks the single results in a multi-result file, like a publication), use this field to list each result in the tracker along with its corresponding dependencies (i.e. files the result depends on, or are necessary to make/reach/interpret the result); if documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (object) result.id (string) result.id.depends.on (array) assoc.file.multi.like.file (array) : if the current resource file is annotating a resource that is one of multiple 'like' files, this field will list all files that are part of the resources. Items (string) access (array) : What is the current/final access level anticipated for this resource? Options are permanent-private (current and final access level is private), temporary-private (current access level is private but final access level will be either restricted-access or public), restricted-access (current, final, or current AND final access level will allow request of data with barriers/restrictions to access), public (current, final, or current AND final access level will allow largely unrestricted request of/access to data); Many investigators will designate data as currently temporary-private, with a final access level of either restricted-access or public: In this case choose both temporary-private AND either 1) restricted-access or 2) public, then add the date at which you expect to transition from temporary-private to either restricted-access or public in the Access Date field below; Private means members of the public cannot request access; Restricted access means they can request access but there is gate-keeping; Public access means they can often access the data without requesting access, and with minimal barriers to access. Items (string) : Must be one of: [\"\", \"permanent-private\", \"temporary-private\", \"restricted-access\", \"public\"] . access.date (string) : If the resource file is currently being held as temporary-private access level and will transition to either restricted-access or public access level at some point, please provide an anticipated date at which this transition will occur - Best guesses are appreciated, however you will NOT be held to this date and may update this date at any time. format (string) : auto inferred; e.g. csv. format.software (string) : If the file format of the resource file is proprietary and requires specific software to open/interpret, provide the software name and version used by the study group to produce/work with the file; e.g. Origin 11.0, CorelDraw 5.6. profile (string) : auto inferred; e.g. tabular-data-resource. mediatype (string) : auto inferred; e.g. text/csv. encoding (string) : auto inferred; e.g. utf-8. schema (string) : auto inferred; for tabular resource, schema of fields contained in tabular resource; might replace this with ref to either heal csv dd or heal json dd. resource.create.date.time (string) : Date time of resource creation; auto-inferred. resource.mod.date.time (string) : Date time at which the resource was last modified; auto-inferred. restrk.create.date.time (string) : Date time at which the resource tracker file for the resource was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the resource tracker file for the resource was last modified; auto-inferred.","title":"Properties"},{"location":"schemas/md_results_tracker/","text":"HEAL Results Tracker \u00b6 HEAL DSC Core Metadata piece to track and provide basic information about results statements or figures in a multi-result file (e.g. a publication) that presents results from your HEAL study. Objective is to list at least all results that have been/will be published in order to describe each result, the data/non-data files each result depends on, and how to use these data/non-data files to reproduce published results. Properties \u00b6 result.id (string) : Unique ID assigned to each result; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add Result Tracker button above the form to add your Result Tracker Directory. Auto-assignment of IDs occurs by searching the directory for any result annotation files already saved, identifying the result ID with the highest result ID number, and adding 1 to that number to get the result ID number and unique result ID for the current result. description (string) : A description of your result. For figure results this may be the figure caption. For text results, it is recommended that this text be identical or very similar to the text of result as shared in text of the multi-result file that is published or provided as part of the data package. category (string) : Broad category your result falls into; Generally, these categories are: figure, or text. Must be one of: [\"\", \"figure\", \"table\", \"text\"] . assoc.multi.result.file (array) : The multi-result file(s) in which this result has been shared. Items (string) figure.number (array) : If the result is a figure result, provide the number of the figure as it appears in the corresponding multi-result file; Examples include '1' if the result is in figure 1, or '1a' if the result is in figure 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the figure number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; figure-number-in-file-1, figure-number-in-file-2). Items (string) table.number (array) : If the result is a table result, provide the number of the table as it appears in the corresponding multi-result file; Examples include '1' if the result is in table 1, or '1a' if the result is in table 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the table number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; table-number-in-file-1, table-number-in-file-2). Items (string) assoc.file.depends.on (array) : Data and/or non-data supporting files the result depends upon (e.g. data, analysis plan/code, etc.). If you are using the DSC Packaging App and have many result dependencies to add, you can use the Add Multiple Result Dependencies button above the form to reveal an interface where you can drag and drop many files at once. If documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (string) result.supports (array) : Describe a larger claim(s) that this result is used to support in text that is published or provided as part of the data package. Items (string) restrk.create.date.time (string) : Date time at which the result annotation file for the result was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the result annotation file for the result was last modified; auto-inferred.","title":"Results Tracker"},{"location":"schemas/md_results_tracker/#heal-results-tracker","text":"HEAL DSC Core Metadata piece to track and provide basic information about results statements or figures in a multi-result file (e.g. a publication) that presents results from your HEAL study. Objective is to list at least all results that have been/will be published in order to describe each result, the data/non-data files each result depends on, and how to use these data/non-data files to reproduce published results.","title":"HEAL Results Tracker"},{"location":"schemas/md_results_tracker/#properties","text":"result.id (string) : Unique ID assigned to each result; If using the DSC Packaging application to annotate your resource(s), these IDs will be auto-assigned when you use the Add Result Tracker button above the form to add your Result Tracker Directory. Auto-assignment of IDs occurs by searching the directory for any result annotation files already saved, identifying the result ID with the highest result ID number, and adding 1 to that number to get the result ID number and unique result ID for the current result. description (string) : A description of your result. For figure results this may be the figure caption. For text results, it is recommended that this text be identical or very similar to the text of result as shared in text of the multi-result file that is published or provided as part of the data package. category (string) : Broad category your result falls into; Generally, these categories are: figure, or text. Must be one of: [\"\", \"figure\", \"table\", \"text\"] . assoc.multi.result.file (array) : The multi-result file(s) in which this result has been shared. Items (string) figure.number (array) : If the result is a figure result, provide the number of the figure as it appears in the corresponding multi-result file; Examples include '1' if the result is in figure 1, or '1a' if the result is in figure 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the figure number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; figure-number-in-file-1, figure-number-in-file-2). Items (string) table.number (array) : If the result is a table result, provide the number of the table as it appears in the corresponding multi-result file; Examples include '1' if the result is in table 1, or '1a' if the result is in table 1A. If the result is included in more than one multi-result file, use the Associated Multi-Result File(s) field above to specify all multi-result files in which the result appears, and add the table number at which the result appears in each of those files in this field, using the same order (e.g. file-1, file-2; table-number-in-file-1, table-number-in-file-2). Items (string) assoc.file.depends.on (array) : Data and/or non-data supporting files the result depends upon (e.g. data, analysis plan/code, etc.). If you are using the DSC Packaging App and have many result dependencies to add, you can use the Add Multiple Result Dependencies button above the form to reveal an interface where you can drag and drop many files at once. If documenting resources wholistically (i.e. documenting all resources related to a study), only list dependencies one layer deep; if documenting resources minimally (i.e. only documenting resources that will be publicly shared), list dependencies liberally; dependencies can be data, code, protocol, etc. Items (string) result.supports (array) : Describe a larger claim(s) that this result is used to support in text that is published or provided as part of the data package. Items (string) restrk.create.date.time (string) : Date time at which the result annotation file for the result was created; auto-inferred. restrk.mod.date.time (string) : Date time at which the result annotation file for the result was last modified; auto-inferred.","title":"Properties"}]}